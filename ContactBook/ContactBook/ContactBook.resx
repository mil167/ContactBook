<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="exitButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAUlJREFUaEPtmM0OgjAQBnkYvXgHvZmI7/8SmKg3f7hrV/tp1AKrbNuN2Ul6IJDt
        jCFCKAzDMAyDy2lVzY7r+dQfikOzaQ9/KAsNblfl/lyXmxgRNNPNbtq63IlHQL6tqwst6Yin/H2+aMS7
        PJZUxKe8X25PkYjDcjEJbuDW2IhOeYHZL8SISCYPJCOSy4OBiIazcTZ5MCYiuzz4JUKNPPgmQp084ESo
        lQf9gtWWVvicAnnQFxFaquQBN0KlPLhHhG8ZWif3kqZWnhgKoHPKf33WLcR6YieFK4+lKqJPfuBvNH9E
        vzzrQdbQw9CPSwtH3l86eG3yiG/kgZqIX+RB9ogx8iBbhIQ88LM2XbPEIyTlQbKIGPIgScTtw5Z7CQtt
        MEYedEZIfdgi3iOk5MFHhKQ8QIS0PHhExJAHNDiGPKDZ0eQNwzCMP6QorhA0CztvJzVZAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>